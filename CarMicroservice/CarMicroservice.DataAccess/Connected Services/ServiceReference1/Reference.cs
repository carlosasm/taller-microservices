//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceCar.Models", IsReference=true)]
    public partial class Car : object
    {
        
        private string AnioField;
        
        private string ColorField;
        
        private int IdField;
        
        private string MarcaField;
        
        private string NombreField;
        
        private string PlacaField;
        
        private int PrecioField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Anio
        {
            get
            {
                return this.AnioField;
            }
            set
            {
                this.AnioField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color
        {
            get
            {
                return this.ColorField;
            }
            set
            {
                this.ColorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Marca
        {
            get
            {
                return this.MarcaField;
            }
            set
            {
                this.MarcaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                return this.NombreField;
            }
            set
            {
                this.NombreField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Placa
        {
            get
            {
                return this.PlacaField;
            }
            set
            {
                this.PlacaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Precio
        {
            get
            {
                return this.PrecioField;
            }
            set
            {
                this.PrecioField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICarService")]
    public interface ICarService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetAllCars", ReplyAction="http://tempuri.org/ICarService/GetAllCarsResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Car[]> GetAllCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarById", ReplyAction="http://tempuri.org/ICarService/GetCarByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Car[]> GetCarByIdAsync(ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/CreateCar", ReplyAction="http://tempuri.org/ICarService/CreateCarResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Car[]> CreateCarAsync(ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/UpdateCar", ReplyAction="http://tempuri.org/ICarService/UpdateCarResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Car[]> UpdateCarAsync(ServiceReference1.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        System.Threading.Tasks.Task<ServiceReference1.Car[]> DeleteCarAsync(ServiceReference1.Car car);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface ICarServiceChannel : ServiceReference1.ICarService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class CarServiceClient : System.ServiceModel.ClientBase<ServiceReference1.ICarService>, ServiceReference1.ICarService
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CarServiceClient() : 
                base(CarServiceClient.GetDefaultBinding(), CarServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ICarService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CarServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(CarServiceClient.GetBindingForEndpoint(endpointConfiguration), CarServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CarServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CarServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CarServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CarServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Car[]> GetAllCarsAsync()
        {
            return base.Channel.GetAllCarsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Car[]> GetCarByIdAsync(ServiceReference1.Car car)
        {
            return base.Channel.GetCarByIdAsync(car);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Car[]> CreateCarAsync(ServiceReference1.Car car)
        {
            return base.Channel.CreateCarAsync(car);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Car[]> UpdateCarAsync(ServiceReference1.Car car)
        {
            return base.Channel.UpdateCarAsync(car);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.Car[]> DeleteCarAsync(ServiceReference1.Car car)
        {
            return base.Channel.DeleteCarAsync(car);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICarService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ICarService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:54214/CarService.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return CarServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ICarService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return CarServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ICarService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ICarService,
        }
    }
}
